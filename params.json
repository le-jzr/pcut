{"name":"PCUT","tagline":"Plain C unit testing framework","body":"PCUT is a very simple framework for unit testing of C code.\r\nUnlike many other frameworks where you need to specify manually which\r\nfunctions belong to a particular test, PCUT provides several smart\r\nmacros that hides this and lets you focus on the most important\r\npart of testing only: that is, coding the test cases.\r\n\r\nThis mini-framework is definitely not complete but it offers the basic\r\nfunctionality needed for writing unit tests.\r\nThis includes the possibility to group tests into test suites, optionally\r\nhaving set-up and tear-down functions.\r\nThere are several assert macros for evaluating the results, their highlight\r\nis very detailed information about the problem.\r\n\r\nThe output of the test can come in two forms: either as an XML output suited\r\nfor later processing or in the form of Test-Anything-Protocol.\r\nPCUT is able to capture standard output and display it together with test\r\nresults.\r\nAnd by running each test in a separate process, the whole framework is pretty\r\nsafe against unexpected crashes, such as null pointer dereference.\r\n\r\nMore details can be found on PCUT wiki on GitHub:\r\nhttps://github.com/vhotspur/pcut/wiki\r\n\r\n\r\nQuick-start example\r\n-------------------\r\n\r\nThe following code tests the standard ``atoi`` function:\r\n\r\n```c\r\n#include <pcut/pcut.h>\r\n#include <stdlib.h>\r\n\r\nPCUT_INIT\r\n\r\nPCUT_TEST(atoi_zero) {\r\n    PCUT_ASSERT_INT_EQUALS(0, atoi(\"0\"));\r\n}\r\n\r\nPCUT_TEST(atoi_positive) {\r\n    PCUT_ASSERT_INT_EQUALS(42, atoi(\"42\"));\r\n}\r\n\r\nPCUT_TEST(atoi_negative) {\r\n    PCUT_ASSERT_INT_EQUALS(-273, atoi(\"-273\"));\r\n}\r\n\r\nPCUT_MAIN()\r\n```\r\n\r\nAs you can see, there is no manual listing of tests that form the test\r\nsuite etc, only the tests and ``PCUT_INIT`` at the beginning and\r\n``PCUT_MAIN`` at the end.\r\n\r\nThis code has to be linked with ``libpcut`` to get an executable that runs\r\nthe tests and reports the results.\r\n\r\nMore examples, in the form of self-tests, are available in the ``tests/``\r\nsubdirectory.\r\nOther examples can be found on the Wiki.\r\n\r\n\r\nBuilding and installing\r\n-----------------------\r\n\r\nPCUT uses CMake (http://www.cmake.org/).\r\nOn Unix systems, following commands build the library and execute the\r\nbuilt-in tests::\r\n\r\n\tmkdir build\r\n\tcd build\r\n\tcmake .. && make all test\r\n\r\nMore details can be found on https://github.com/vhotspur/pcut/wiki/Building.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}